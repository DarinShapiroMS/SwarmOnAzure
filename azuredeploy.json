{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {       
        "vmssName": {
            "type": "string",       
            "defaultValue": "SwarmAgents",
            "metadata": {
                    "description": "The name of the Scale Set. The value must be between 1 and 15 alpha numeric characters long,  only contain alphanumeric characters, not start with a number, or contain special characters."
                    }
        },
        "vmSku": {
            "type": "string",          
            "defaultValue": "Example: Standard_F4s_v2, reference size column at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes",
            "metadata": {
                "description":"The sku/size of the vm instances to be created.  Determines cores/memory/etc."
            }
        },
        "vmPriorty":{
            "type": "string",           
            "allowedValues": [
                "Normal",
                 "Low"
                ],
            "defaultValue": "Normal",
            "metadata": {
                "description": "Low priority VMs are cheaper but can be deallocated when Azure needs more inventory."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The admin username for the Windows virtual machine. Store this info for later use such as RDP into vm."
            },
            "defaultValue": "swarmadmin"
            
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description":"Password for Windows admin user.  Store this info for later use such as RDP into vm."
            }
            
        },
        "instanceCount": {
            "type": "string",
            "defaultValue": "5",
            "metadata": {
                "description": "The inital number of vm instances to create.  This nunmber can be adjusted later or even automated."
            }
        },
        "vnetName":{
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description":" The name of the Virtual Network the VMs will be deployed to."
            }
        },
        "subnetName":{
            "type": "string",
            "metadata": {
                "description": "The name of the subnet within the virtual network that the VMs will be deployed to."
            }
        },                         
        "configScriptUrl" : {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/DarinShapiroMS/SwarmOnAzure/master/ConfigVM.ps1",
            "metadata": {
                "description":"The URL to the vm configuration script that runs when a new vm is provisioned."
            }
        },
        "coordinatorIp" :{
            "type": "string",
            "metadata": {
                "description":"The IP address of the Swarm Coordinator, typically on your local on-prem network.  Must be reachable by vms in Azure via VPN."
            }             
        }
    },
    "variables": {
        "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "networkApiVersion": "2018-01-01",
        "storageApiVersion": "2018-07-01",
        "computeApiVersion": "2018-06-01",
        "autoscaleApiVersion": "2015-04-01",
        "image":{
            "sku": "2016-Datacenter",
            "publisher": "MicrosoftWindowsServer",
            "version": "latest",
            "offer": "WindowsServer"
        },
        "subnetId" : "[concat( resourceGroup().id, '/providers/Microsoft.Network/virtualNetworks/', parameters('vnetName'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
        {
            "name": "[parameters('vmssName')]",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": "[int(parameters('instanceCount'))]"
            },
            "properties": {
                "overprovision": "true",
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "singlePlacementGroup": "false",
                "virtualMachineProfile": {
                    "storageProfile": {
                        "imageReference": "[variables('image')]",
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        }
                    },
                    "priority": "[parameters('vmPriorty')]",
                    "evictionPolicy": "delete",
                    "osProfile": {
                        "computerNamePrefix": "AzrAgent",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(parameters('vmssName'), 'Nic')]",
                                "properties": {
                                    "primary": "true",
                                    "enableAcceleratedNetworking": "false",
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(parameters('vmssName'), 'IpConfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[variables('subnetId')]"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "properties": {
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "[parameters('configScriptUrl')]"
                                        ],
                                            "commandToExecute": "[concat ('powershell -ExecutionPolicy Unrestricted -File ConfigVM.ps1',' -user ', parameters('adminUsername'), ' -pwd ', parameters('adminPassword'), ' -coordinatorIp ', parameters('coordinatorIp'))]"                                       
                                    },
                                    "publisher": "Microsoft.Compute",
                                    "type": "CustomScriptExtension",
                                    "typeHandlerVersion": "1.7"
                                },
                                "name": "CustomScriptExtension"
                            }
                        ]
                    }

                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "linkedTemplate",
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "https://raw.githubusercontent.com/DarinShapiroMS/SwarmOnAzure/Dev/SwarmDashboardDeploy.json",                
                 "contentVersion":"1.0.0.0"
              },
              "parameters": {               
                 "NetworkGatewayName": {"value" :"SwarmGateway"},
                 "ScaleSetName": {"value": "[parameters('vmssName')]"},
                 "ResourceGroup": {"value" : "[resourceGroup().name]"},
                 "dashboardName": {"value" : "testdashboard"}
                }                             
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]"
               
              ]
         }
    ]

}
